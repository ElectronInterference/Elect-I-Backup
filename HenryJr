package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;
import org.firstinspires.ftc.teamcode.MoldugaHardware;
@Autonomous(name="Basic: Iterative OpMode", group="Iterative Opmode")

public class HenryJr extends OpMode
{
    //acces our hardware program
    MoldugaHardware robot   = new MoldugaHardware();        
    int TaterTot;

     // Code to run ONCE when the driver hits INIT
     
    @Override
    public void init() {
        robot.init(hardwareMap);
        telemetry.addData("Status", "Initialized");
        telemetry.addData("Status", "Initialized");
    //acces our hardware program
   
    
        
      
    }

    /*
     * Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY
     */
    @Override
    public void init_loop() {
        
    }

    /*
     * Code to run ONCE when the driver hits PLAY
     */
    @Override
    public void start() {
        //runtime.reset();
    }

    /*
     * Code to run REPEATEDLY after the driver hits PLAY but before they hit STOP
     */
    @Override
    public void loop() {
        // the Robot does the first task which is to unlatch 
       if (TaterTot==1){
           //Land();
       }
       else if (TaterTot==2){
           //NavigateToChesseBlock();
       }
       else if (TaterTot==3){
           //FindAndKnockOffCheeseBlock();
        }
        else if (TaterTot==4){
            //NavigateToDepot();
        }
        else if (TaterTot==5){
            //DeployMarker();
        }
        else if (TaterTot==6){
            //NavigateToCrater();
        }
    }
        //public void (navigateToCheeseBlock){
            //DriveForward 
        //}
    public void FindAndKnockoffCHeeseeBlock(){
        robot.driveForward(.5,24);
        if (1==2){
            robot.driveRight(.5,15);
            if (1==2){
                robot.driveLeft(.5,30);
                robot.turnDegrees(10);
                robot.driveForward(.5,32);
            }
            robot.turnDegrees(10);
            robot.driveForward(.5,32);
        } else {
            robot.driveForward(.5,30);
            robot.markerRelease();
            robot.turnDegrees(135);
            robot.driveForward(.5,100);
        }
    }
    //public void (NavigateToDepot){
            //...
        //}
    //public void (DeployMarker){
            //ReleaseMarker 
        //}
    // public void (NavigateToCrater){
            //DriveBackwards
    //}
}
    
